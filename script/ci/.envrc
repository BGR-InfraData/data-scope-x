#!/bin/bash

cd "$(git rev-parse --show-toplevel)" || exit 1

# shellcheck disable=SC1091
source .envrc

COMMITS_PATH="${TMPDIR}COMMITS"
export COMMITS_PATH

MODIFIED_FILES_PATH="${TMPDIR}MODIFIED_FILES"
export MODIFIED_FILES_PATH

IMPACTED_TARGETS_PATH="${TMPDIR}IMPACTED_TARGETS"
export IMPACTED_TARGETS_PATH

export DEPLOY_BRANCH_PATTERN="(prod|staging|dev|sandbox|qa)"

LAST_COMMAND_LOG_FILE="${TMPDIR}LAST_COMMAND_LOG"
export LAST_COMMAND_LOG_FILE

CHANGE_MESSAGE_FILE="${TMPDIR}CHANGE_MESSAGE.md"
export CHANGE_MESSAGE_FILE

LABELS_FILE="${TMPDIR}LABELS"
export LABELS_FILE

DEFAULT_BRANCH=$(git remote show origin | sed -n '/HEAD branch/s/.*: //p')
export DEFAULT_BRANCH

function check {
    set +e
    "$@" &> "${LAST_COMMAND_LOG_FILE}"
    local STATUS=$?
    set -e
    if (( STATUS != 0 )); then
        cat "${LAST_COMMAND_LOG_FILE}"
        exit ${STATUS}
    fi
}

function labels {
    local LABELS=("$@")
    # shellcheck disable=SC2048
    for LABEL in ${LABELS[*]}
    do
        echo "${LABEL}" >> "${LABELS_FILE}"
    done
}

function changes {
    local CHANGE_TITLE="${1}"
    shift
    local CHANGE_LIST=("$@")
    # shellcheck disable=SC2128
    if [[ -n ${CHANGE_LIST} ]]; then
        echo "### ${CHANGE_TITLE}" >> "${CHANGE_MESSAGE_FILE}"
        echo "#### build" >> "${CHANGE_MESSAGE_FILE}"
        # shellcheck disable=SC2048
        for CHANGE in ${CHANGE_LIST[*]}
        do
            echo "- ${CHANGE}" >> "${CHANGE_MESSAGE_FILE}"
        done
        labels "${CHANGE_TITLE}"
    fi
}

function changes_deploy {
    local CHANGE_LIST=("$@")
    # shellcheck disable=SC2128
    if [[ -n ${CHANGE_LIST} ]]; then
        echo "#### deploy" >> "${CHANGE_MESSAGE_FILE}"
        # shellcheck disable=SC2048
        for CHANGE in ${CHANGE_LIST[*]}
        do
            echo "- ${CHANGE}" >> "${CHANGE_MESSAGE_FILE}"
        done
    fi
}

function changes_details {
    {
        echo "<details><summary> details</summary>"
        cat "${1}"
        echo "</details>
        "
    } >> "${CHANGE_MESSAGE_FILE}"
}